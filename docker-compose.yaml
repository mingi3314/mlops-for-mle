version: "3"
services:
  postgres-server:
    image: postgres:14.0
    container_name: postgres-server
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase
    ports:
      - 5433:5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "mydatabase",
          "-U",
          "myuser"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  data-generator:
    build:
      context: .
      dockerfile: Dockerfile
      target: data_generator
    container_name: data-generator
    env_file:
      - .env
    depends_on:
      postgres-server:
        condition: service_healthy
    command: [ "postgres-server" ]

  mlflow-backend-store:
    image: postgres:14.0
    container_name: mlflow-backend-store
    environment:
      - POSTGRES_USER=mlflowuser
      - POSTGRES_PASSWORD=mlflowpassword
      - POSTGRES_DB=mlflowdatabase
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "mlflowdatabase",
          "-U",
          "mlflowuser"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  mlflow-artifact-store:
    image: minio/minio
    container_name: mlflow-artifact-store
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniostorage
    ports:
      - "9000:9000" # Service port
      - "9001:9001" # Console port
    command: server /data/minio --console-address :9001
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: mlflow_server
    container_name: mlflow-server
    depends_on:
      mlflow-backend-store:
        condition: service_healthy
      mlflow-artifact-store:
        condition: service_healthy
    ports:
      - "5001:5000"
    environment:
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: miniostorage
      MLFLOW_S3_ENDPOINT_URL: http://mlflow-artifact-store:9000
    command:
      - /bin/bash
      - -c
      - |
        mc config host add mlflowminio http://mlflow-artifact-store:9000 minio miniostorage &&
        mc mb --ignore-existing mlflowminio/mlflow
        mlflow server \
        --backend-store-uri postgresql://mlflowuser:mlflowpassword@mlflow-backend-store/mlflowdatabase \
        --default-artifact-root s3://mlflow/ \
        --host 0.0.0.0

  fastapi-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: fastapi_server
    container_name: fastapi-server
    ports:
      - "8000:8000"

networks:
  default:
    name: mlops-network
